/**
 * This module contains types used throughout the project.
 * @module types
 */

import type {
  FIXTURE_TYPE_LINK_SYMBOL,
  FIXTURE_TYPE_SYMLINK_SYMBOL,
} from "./constants";

/**
 * Represents the possible content types that can be stored in a test directory.
 */
export type DirectoryContent =
  | string
  | boolean
  | number
  | Uint8Array
  | null
  | undefined
  | bigint
  | symbol
  | TestdirSymlink
  | TestdirLink;

/**
 * Represents a symbolic link in a testing directory.
 */
export interface TestdirSymlink {
  /**
   * Internally used to mark and distinguish symlink fixtures from other fixture types.
   */
  [key: symbol]: typeof FIXTURE_TYPE_SYMLINK_SYMBOL;

  /**
   * The path to the symlink target.
   */
  path: string;
}

/**
 * Represents a symbolic link in the test directory.
 */
export interface TestdirLink {
  /**
   * Internally used to mark and distinguish link fixtures from other fixture types.
   */
  [key: symbol]: typeof FIXTURE_TYPE_LINK_SYMBOL;

  /**
   * The path to the link target.
   */
  path: string;
}

/**
 * A JSON representation of a directory.
 */
export interface DirectoryJSON<T extends DirectoryContent = DirectoryContent> {
  /**
   * Is only set when generated by `fromFileSystem` or `fromFileSystemSync`.
   */
  [originalPath: symbol]: string | undefined;

  /**
   * The content of the directory.
   */
  [key: string]: T | DirectoryJSON<T>;
}

/**
 * Represents metadata for a file system entry.
 */
export interface FSMetadata {
  /**
   * The POSIX permission of the file system entry.
   */
  mode: number;
}

/**
 * Represents metadata for a test directory entry.
 */
export interface TestdirMetadata {
  /**
   * Internally used to store and retrieve metadata about test fixture definitions.
   */
  [key: symbol]: FSMetadata;

  /**
   * The content of the definition.
   */
  content: DirectoryContent;
}
