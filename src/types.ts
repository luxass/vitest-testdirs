/**
 * This module contains types used throughout the project.
 * @module types
 */

import type {
  FIXTURE_TYPE_LINK_SYMBOL,
  FIXTURE_TYPE_SYMLINK_SYMBOL,
} from "./constants";

/**
 * Represents the possible content types that can be stored in a test directory.
 *
 * @typedef DirectoryContent
 *
 * Can be one of:
 * - string
 * - boolean
 * - number
 * - Uint8Array
 * - null
 * - undefined
 * - bigint
 * - symbol
 * - TestdirSymlink
 * - TestdirLink
 */
export type DirectoryContent =
  | string
  | boolean
  | number
  | Uint8Array
  | null
  | undefined
  | bigint
  | symbol
  | TestdirSymlink
  | TestdirLink;

/**
 * Represents a symbolic link in a testing directory.
 *
 * @interface TestdirSymlink
 * @property {symbol} [key] - Symbol property indicating that this is a symlink type
 * @property {string} path - The path that the symlink points to
 */
export interface TestdirSymlink {
  [key: symbol]: typeof FIXTURE_TYPE_SYMLINK_SYMBOL;
  path: string;
}

/**
 * Represents a symbolic link in the test directory.
 * @interface TestdirLink
 * @property {symbol} [key] - Symbol used to identify the fixture type link.
 * @property {string} path - The path of the symbolic link.
 */
export interface TestdirLink {
  [key: symbol]: typeof FIXTURE_TYPE_LINK_SYMBOL;
  path: string;
}

/**
 * A JSON representation of a directory.
 */
export interface DirectoryJSON<T extends DirectoryContent = DirectoryContent> {
  /**
   * Is only set when generated by `fromFileSystem` or `fromFileSystemSync`.
   */
  [originalPath: symbol]: string | undefined;
  [key: string]: T | DirectoryJSON<T>;
}
