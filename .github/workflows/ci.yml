name: CI

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: setup node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: lts/*
          cache: pnpm

      - name: install
        run: pnpm install --frozen-lockfile

      - name: build
        run: pnpm build

      - name: lint
        run: pnpm lint

      - name: typecheck
        run: pnpm typecheck

  test:
    name: "test (os: ${{ matrix.os }}, node: ${{ matrix.node }}, vitest: ${{ matrix.vitest }})"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: [20, 22, 24]
        vitest: [3.0.0, 3.2.4, latest]
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
      fail-fast: false
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: setup node ${{ matrix.node }}
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: ${{ matrix.node }}

      - name: install
        run: pnpm install --frozen-lockfile

      - name: install vitest ${{ matrix.vitest }}
        run: pnpm add -D vitest@${{ matrix.vitest }}

      - name: test
        if: matrix.os != 'ubuntu-latest' && matrix.node != 22 && matrix.vitest != 'latest'
        run: pnpm test

      - name: test with coverage
        if: matrix.os == 'ubuntu-latest' || matrix.node == 22 || matrix.vitest == 'latest'
        run: pnpm test --coverage

      - name: upload coverage reports to codecov
        if: matrix.os == 'ubuntu-latest' || matrix.node == 22 || matrix.vitest == 'latest'
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
